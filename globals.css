/* START CSS BASELINE */

/* taken from https://www.joshwcomeau.com/css/custom-css-reset/ */
/* these are some initial rules to standardize element display and behaviour */
/* you can read more about why following the above link, or searching for */
/* "css normalize" or "css reset" in your favorite search engine ;) */
@import url('https://fonts.googleapis.com/css2?family=Rubik&display=swap');
@font-face {
  font-family: "Ploni-light";
  src: url("./public/ploni_aaa/ploni-light-aaa.otf");
}
@font-face {
  font-family: "Ploni-bold";
  src: url("./public/ploni_aaa/ploni-black-aaa.otf");
}

:root {
  --primary-color: #9EDA82;
  --secondery-color: #376720;
  --tertiary-color: #DAFFC9;
  --text-color: #ffffff;
  --primary-font: 'Ploni-light';
  --primary-font-bold: 'Ploni-bold';
  --grid-item-height:182px;
  --grid-item-even-padding-right:90px;
  --grid-item-width:111px;
}

html,
body {
  margin: 0;
}

#wrapper {
  position: relative;
}

.backgound-tilt-grid {
  background-color: var(--primary-color);
  position: absolute;
  top: 0;
  right: 0;
  z-index: -100;
  width: 100%;
  padding: 5%;

}
.backgound-tilt-grid .row{
  height: 111px;
}


.landing {
  font-family: var(--primary-font);
  padding: 1%;
  position: relative;
}

.landing h1 {
  color: var(--text-color);
  font-family: var(--primary-font-bold);
}

.landing .container {
  display: flex;
  flex-direction: row;
  justify-content: center;
  padding: 0 2.5%;
}

.landing .spacer {
  width: 25%;
}

.landing-exp {
  width: 35%;
}

.landing-exp h1 {
  color: var(--secondery-color);
}

.landing-exp b {
  color: var(--secondery-color);
  font-family: var(--primary-font-bold);
}

.landing-exp p {
  color: var(--text-color);
  font-size: 18pt;
  margin-bottom: 5%;
}

/* TODO: this style should be removed after integration */
.landing-input {
  background-color: var(--tertiary-color);
  width: 40%;
  margin-top: 10%;
}

.slider-container {
  display: flex;
  flex-wrap: wrap;
  border-left-style: solid;
  border-left-width: 5px;
  border-left-color: #74b9ff;
  background-color: #81ecec;
  padding: 2%;


}

.container .item {
  flex: 1 0 33%;
}

.slider-container label {
  margin-left: 1%;
  margin-right: 1%;
}

/* Style for content box */
.simultor-input {
  flex: 1; /* Take up one-third of the available space */
  background-color: #DAFFC9;
  color: #000000;
  padding: 20px;
  border-radius: 16px;
  margin-bottom: 20px; 
  display: flex; /* Use flexbox layout */
  flex-direction: column;
  align-items: flex-start;
  position: relative;
}

/* Style for binary selector label */
.simultor-input label {
  display: inline-block; /* Ensure label is a block element */
  margin-bottom: 10px;
  direction: rtl;
  text-align: right;
}

/* Style for binary selector input */
.simultor-input input[type="checkbox"] {
  position: absolute;
  right: 0; /* Position radio buttons to the right */
  top: 0;
  margin-left: 10px; /* Add spacing between radio buttons */
}

/* .binary-selector-container {
  display: flex;
  justify-content: flex-end;
} */

.input-wrapper {
  display: flex;
  flex-direction: column;
}

.input-wrapper input {
  background-color: #DAFFC9;
  border: 1px solid var(--secondery-color); 
  border-radius: 5px;
  color:#000000;
}

.input-wrapper label {
  margin-bottom: 5px;
  display: block;
}

.next-page{
  background-image: url('/open-pension/images/arrow.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  padding-right: 20px;
  width: 50px; 
  height: 50px;
  border-radius: 20px;
  background-color: #1e3811;
  color:#DAFFC9;
  border: none ;
  border-radius: 50%;
  cursor: pointer;
  size: 1000px;
  position: absolute; /* Position the button absolutely within the container */
  bottom: 50px; /* Position the button 10px from the bottom */
  left: 50px;
}

.next-page::before {
  content: ''; /* Add a pseudo-element to create the arrow */
  position: absolute; /* Position the arrow relative to the button */
  top: 50%; /* Align the arrow vertically in the middle */
  right: 10px; /* Adjust the position of the arrow as needed */
  transform: translateY(-50%); /* Center the arrow vertically */
  width: 20px; /* Set the width of the arrow */
  height: 20px; /* Set the height of the arrow */
  background-image: url('/open-pension/images/arrow.svg'); /* Use the same arrow SVG as the button background */
  background-size: cover; /* Ensure that the arrow fills the pseudo-element */
}

.next-page:loading{
  background-image: url('/open-pension/images/arrow.svg');
}

.next-page:hover {
  background-color: #132814; /* Darker green on hover */
}

.next-page:focus {
  outline: none; /* Remove focus outline */
}

.subtext{
  font-family: var(--primary-font);
  font-size: 9pt;
}

/* Hide the default radio input */
.radio-container input {
  position: absolute;
  opacity: 0;
}

/* Style the custom radio selector */
.checkmark {
  position: relative;
  display: inline-block;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 1px solid var(--secondery-color); 
}

/* Style the checked state of the custom radio selector */
.radio-container input:checked + .checkmark::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 10px;
  height: 10px;
  background-color: var(--secondery-color);
  border: 1px solid var(--secondery-color); 
  border-radius: 50%;
}

/* Hover effect for the custom radio selector */
.radio-container:hover .checkmark {
  background-color: var(--secondery-color);
}

